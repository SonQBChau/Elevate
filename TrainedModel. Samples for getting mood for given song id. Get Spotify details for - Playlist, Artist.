{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "from helpers import *\n",
    "import numpy as np \n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "#Libraries to create the multiclass model\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense\n",
    "from keras.wrappers.scikit_learn import KerasClassifier\n",
    "from keras.utils import np_utils\n",
    "#Import tensorflow and disable the v2 behavior and eager mode\n",
    "import tensorflow as tf\n",
    "tf.compat.v1.disable_eager_execution()\n",
    "tf.compat.v1.disable_v2_behavior()\n",
    "\n",
    "#Library to validate the model\n",
    "from sklearn.model_selection import cross_val_score, KFold, train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder,MinMaxScaler\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import confusion_matrix, accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"data_moods.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "col_features = df.columns[6:-3]\n",
    "X= MinMaxScaler().fit_transform(df[col_features])\n",
    "X2 = np.array(df[col_features])\n",
    "Y = df['mood']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mood</th>\n",
       "      <th>encode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Calm</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Energetic</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Happy</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sad</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        mood  encode\n",
       "5       Calm       0\n",
       "4  Energetic       1\n",
       "0      Happy       2\n",
       "1        Sad       3"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoder = LabelEncoder()\n",
    "encoder.fit(Y)\n",
    "encoded_y = encoder.transform(Y)\n",
    "\n",
    "\n",
    "#Convert to  dummy (Not necessary in my case)\n",
    "dummy_y = np_utils.to_categorical(encoded_y)\n",
    "\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,encoded_y,test_size=0.2,random_state=15)\n",
    "\n",
    "target = pd.DataFrame({'mood':df['mood'].tolist(),'encode':encoded_y}).drop_duplicates().sort_values(['encode'],ascending=True)\n",
    "target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "def base_model():\n",
    "    #Create the model\n",
    "    model = Sequential()\n",
    "    #Add 1 layer with 8 nodes,input of 4 dim with relu function\n",
    "    model.add(Dense(8,input_dim=10,activation='relu'))\n",
    "    #Add 1 layer with output 3 and softmax function\n",
    "    model.add(Dense(4,activation='softmax'))\n",
    "    #Compile the model using sigmoid loss function and adam optim\n",
    "    model.compile(loss='categorical_crossentropy',optimizer='adam',\n",
    "                 metrics=['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "estimator = KerasClassifier(build_fn=base_model,epochs=300,batch_size=200,verbose=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Baseline: 79.31% (3.82%)\n"
     ]
    }
   ],
   "source": [
    "#Evaluate the model using KFold cross validation\n",
    "kfold = KFold(n_splits=10,shuffle=True)\n",
    "results = cross_val_score(estimator,X,encoded_y,cv=kfold)\n",
    "print(\"Baseline: %.2f%% (%.2f%%)\" % (results.mean()*100,results.std()*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "estimator.fit(X_train,Y_train)\n",
    "y_preds = estimator.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score 0.7898550724637681\n"
     ]
    }
   ],
   "source": [
    "cm = confusion_matrix(Y_test,y_preds)\n",
    "ax = plt.subplot()\n",
    "sns.heatmap(cm,annot=True,ax=ax)\n",
    "\n",
    "labels = target['mood']\n",
    "ax.set_xlabel('Predicted labels')\n",
    "ax.set_ylabel('True labels')\n",
    "ax.set_title('Confusion Matrix')\n",
    "ax.xaxis.set_ticklabels(labels)\n",
    "ax.yaxis.set_ticklabels(labels)\n",
    "plt.show()\n",
    "\n",
    "print(\"Accuracy Score\",accuracy_score(Y_test,y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create your developer account and get credentails from - https://developer.spotify.com/\n",
    "import spotipy\n",
    "import time\n",
    "from IPython.core.display import clear_output\n",
    "from spotipy import SpotifyClientCredentials, util\n",
    "\n",
    "client_id='xxxxxxx'\n",
    "client_secret='xxxxxx'\n",
    "# redirect_uri='your_url_to_redirect'\n",
    "# username = 'your_username_spotify_code'\n",
    "# scope = 'playlist-modify-public'\n",
    "\n",
    "#Credentials to access the Spotify Music Data\n",
    "manager = SpotifyClientCredentials(client_id,client_secret)\n",
    "sp = spotipy.Spotify(client_credentials_manager=manager)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_songs_features(ids):\n",
    "\n",
    "    meta = sp.track(ids)\n",
    "    features = sp.audio_features(ids)\n",
    "\n",
    "    # meta\n",
    "    name = meta['name']\n",
    "    album = meta['album']['name']\n",
    "    artist = meta['album']['artists'][0]['name']\n",
    "    release_date = meta['album']['release_date']\n",
    "    length = meta['duration_ms']\n",
    "    popularity = meta['popularity']\n",
    "    ids =  meta['id']\n",
    "\n",
    "    # features\n",
    "    acousticness = features[0]['acousticness']\n",
    "    danceability = features[0]['danceability']\n",
    "    energy = features[0]['energy']\n",
    "    instrumentalness = features[0]['instrumentalness']\n",
    "    liveness = features[0]['liveness']\n",
    "    valence = features[0]['valence']\n",
    "    loudness = features[0]['loudness']\n",
    "    speechiness = features[0]['speechiness']\n",
    "    tempo = features[0]['tempo']\n",
    "    key = features[0]['key']\n",
    "    time_signature = features[0]['time_signature']\n",
    "\n",
    "    track = [name, album, artist, ids, release_date, popularity, length, danceability, acousticness,\n",
    "            energy, instrumentalness, liveness, valence, loudness, speechiness, tempo, key, time_signature]\n",
    "    columns = ['name','album','artist','id','release_date','popularity','length','danceability','acousticness','energy','instrumentalness',\n",
    "                'liveness','valence','loudness','speechiness','tempo','key','time_signature']\n",
    "    return track,columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function that can predict mood of song Id.\n",
    "# Ex: SongId: https://open.spotify.com/track/54bFM56PmE4YLRnqpW6Tha\n",
    "\n",
    "def predict_mood(id_song):\n",
    "    #Join the model and the scaler in a Pipeline\n",
    "    pip = Pipeline([('minmaxscaler',MinMaxScaler()),('keras',KerasClassifier(build_fn=base_model,epochs=300,\n",
    "                                                                             batch_size=200,verbose=0))])\n",
    "    #Fit the Pipeline\n",
    "    pip.fit(X2,encoded_y)\n",
    "\n",
    "    #Obtain the features of the song\n",
    "    preds = get_songs_features(id_song)\n",
    "    #Pre-process the features to input the Model\n",
    "    preds_features = np.array(preds[0][6:-2]).reshape(-1,1).T\n",
    "\n",
    "    #Predict the features of the song\n",
    "    results = pip.predict(preds_features)\n",
    "\n",
    "    mood = np.array(target['mood'][target['encode']==int(results)])\n",
    "    name_song = preds[0][0]\n",
    "    artist = preds[0][2]\n",
    "\n",
    "    return print(\"{0} by {1} is a {2} song\".format(name_song,artist,mood[0].upper()))\n",
    "    #print(f\"{name_song} by {artist} is a {mood[0].upper()} song\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Therefore I Am by Billie Eilish is a HAPPY song\n"
     ]
    }
   ],
   "source": [
    "predict_mood('54bFM56PmE4YLRnqpW6Tha')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "track    : Dakiti\n",
      "trackId   : 47EiUVwUp4C9fGccaPuUCS\n",
      "audio    : https://p.scdn.co/mp3-preview/edd9bea2e66b14169f8bbfa45a78b6599b14160a?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b27334c8199b0b3b3fb42b8a98a8\n",
      "\n",
      "track    : UN DIA (ONE DAY) (Feat. Tainy)\n",
      "trackId   : 0EhpEsp4L0oRGM0vmeaN5e\n",
      "audio    : Not Available..\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273312bd86cc2db22fde885ee73\n",
      "\n",
      "track    : Hasta Que Dios Diga\n",
      "trackId   : 06s3QtMJVXw1AJX3UfvZG1\n",
      "audio    : https://p.scdn.co/mp3-preview/0ab6784a19b1aaae24a7765085d9ff93a6e8274a?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b2733cb695bfc1246bdf66161fce\n",
      "\n",
      "track    : Safaera\n",
      "trackId   : 2DEZmgHKAvm41k4J3R2E9Y\n",
      "audio    : https://p.scdn.co/mp3-preview/c67f59e5d3806b41f54f772ba8cc24410ed0a258?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273548f7ec52da7313de0c5e4a0\n",
      "\n",
      "track    : Yo Perreo Sola\n",
      "trackId   : 0SqqAgdovOE24BzxIClpjw\n",
      "audio    : https://p.scdn.co/mp3-preview/3575ce15e6727094dc606c9d29e79f5830340172?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273548f7ec52da7313de0c5e4a0\n",
      "\n",
      "track    : CÓMO SE SIENTE - Remix\n",
      "trackId   : 2tFwfmceQa1Y6nRPhYbEtC\n",
      "audio    : Not Available..\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273464c8458b8b0cfcfb655fbfc\n",
      "\n",
      "track    : LA CANCIÓN\n",
      "trackId   : 0fea68AdmYNygeTGI4RC18\n",
      "audio    : Not Available..\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b2734891d9b25d8919448388f3bb\n",
      "\n",
      "track    : La Santa\n",
      "trackId   : 69vlMrzHwATKzupwNcUPyK\n",
      "audio    : https://p.scdn.co/mp3-preview/0fba2ae7b6f5588e301a6c0008914e1e864b6e66?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273548f7ec52da7313de0c5e4a0\n",
      "\n",
      "track    : Si Veo a Tu Mamá\n",
      "trackId   : 41wtwzCZkXwpnakmwJ239F\n",
      "audio    : https://p.scdn.co/mp3-preview/030b0d06fd4154482d5cb122b5c8c6678c86f666?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273548f7ec52da7313de0c5e4a0\n",
      "\n",
      "track    : La Difícil\n",
      "trackId   : 6NfrH0ANGmgBXyxgV2PeXt\n",
      "audio    : https://p.scdn.co/mp3-preview/b368a8887077ef0d389964973e2ee298f1b03948?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "cover art: https://i.scdn.co/image/ab67616d0000b273548f7ec52da7313de0c5e4a0\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#  \n",
    "# Ex: Spotify artist - https://open.spotify.com/artist/4q3ewBCX7sLwd24euuV69X\n",
    "\n",
    "import spotipy\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "\n",
    "lz_uri = 'spotify:artist:4q3ewBCX7sLwd24euuV69X'\n",
    "\n",
    "spotify = spotipy.Spotify(client_credentials_manager=manager)\n",
    "results = spotify.artist_top_tracks(lz_uri)\n",
    "\n",
    "for track in results['tracks'][:10]:\n",
    "    print('track    : ' + track['name'])\n",
    "    print('trackId   : ' + track['id'])\n",
    "    preview_url = track['preview_url']\n",
    "    if preview_url is None:\n",
    "        preview_url = 'Not Available..'\n",
    "    print('audio    : ' + preview_url)\n",
    "    print('cover art: ' + track['album']['images'][0]['url'])\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "track Id    : 7m9OqQk4RVRkw9JJdeAw96\n",
      "track Name   : Jocelyn Flores\n",
      "audio    : https://p.scdn.co/mp3-preview/9fd5ccc86f318c303d582800e9f7d6f07f40440b?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 43zdsphuZLzwA9k4DJhU0I\n",
      "track Name   : when the party's over\n",
      "audio    : \n",
      "\n",
      "track Id    : 2RttW7RAu5nOAfq6YFvApB\n",
      "track Name   : Happier\n",
      "audio    : https://p.scdn.co/mp3-preview/e2f5edb569c73916428ec0a2e0b56a9f777851dd?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5qrSlOut2rNAWv3ubArkNy\n",
      "track Name   : Be Alright\n",
      "audio    : \n",
      "\n",
      "track Id    : 4kflIGfjdZJW4ot2ioixTB\n",
      "track Name   : Someone Like You\n",
      "audio    : https://p.scdn.co/mp3-preview/d808ccb1a59c5f21a14cf8da9974558f84366933?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5tz69p7tJuGPeMGwNTxYuV\n",
      "track Name   : 1-800-273-8255\n",
      "audio    : \n",
      "\n",
      "track Id    : 6y6jbcPG4Yn3Du4moXaenr\n",
      "track Name   : idfc\n",
      "audio    : https://p.scdn.co/mp3-preview/80f59f57f6d2e9fac6c06273954cad289724caf5?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4ZLzoOkj0MPWrTLvooIuaa\n",
      "track Name   : Get You The Moon (feat. Snøw)\n",
      "audio    : https://p.scdn.co/mp3-preview/d5c74a622751ac0537d769bf795cb728b33ff285?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7qEHsqek33rTcFNT9PFqLf\n",
      "track Name   : Someone You Loved\n",
      "audio    : \n",
      "\n",
      "track Id    : 3OPozjaFwjjmrgdkUMV9TD\n",
      "track Name   : Ease Off\n",
      "audio    : https://p.scdn.co/mp3-preview/15332d244eeb23ea15bc157f1430d043ba1c7969?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5kqIPrATaCc2LqxVWzQGbk\n",
      "track Name   : 7 Years\n",
      "audio    : https://p.scdn.co/mp3-preview/3261944a4e12e2c7bee9266b1b14558e71a97964?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6WU74yOM3Evu2hoyy2g5g5\n",
      "track Name   : Half A Man\n",
      "audio    : \n",
      "\n",
      "track Id    : 3GVkPk8mqxz0itaAriG1L7\n",
      "track Name   : Everybody Dies In Their Nightmares\n",
      "audio    : https://p.scdn.co/mp3-preview/5ba73af0f120ffd16a2081a3ea6b0a502b296c42?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 13HVjjWUZFaWilh2QUJKsP\n",
      "track Name   : Let It Go\n",
      "audio    : \n",
      "\n",
      "track Id    : 7AFASza1mXqntmGtbxXprO\n",
      "track Name   : changes\n",
      "audio    : \n",
      "\n",
      "track Id    : 5l2GIiGkjbcuSIhCV08Zhj\n",
      "track Name   : Memories\n",
      "audio    : https://p.scdn.co/mp3-preview/91851f8f68411c538b792f083d0316c619efcbd7?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7vRriwrloYVaoAe3a9wJHe\n",
      "track Name   : i hate u, i love u (feat. olivia o'brien)\n",
      "audio    : https://p.scdn.co/mp3-preview/915f200cd1d5ed99ca02c1d290d7729df84b7580?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4Of7rzpRpV1mWRbhp5rAqG\n",
      "track Name   : Bruises\n",
      "audio    : \n",
      "\n",
      "track Id    : 6Hj9jySrnFppAI0sEMCZpJ\n",
      "track Name   : Robbery\n",
      "audio    : \n",
      "\n",
      "track Id    : 0u2P5u6lvoDfwTYjAADbn4\n",
      "track Name   : lovely (with Khalid)\n",
      "audio    : \n",
      "\n",
      "track Id    : 34RgkpI4cM5EtTjf5LjaJ7\n",
      "track Name   : i gave you everything i had\n",
      "audio    : https://p.scdn.co/mp3-preview/8f605f9dc4c62dad6d2605916207f58b92b70491?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 29f11nLUcMYQ2Ndbnb7N0o\n",
      "track Name   : Dancing With A Stranger (With Normani) - Acoustic\n",
      "audio    : \n",
      "\n",
      "track Id    : 26z6V1SijQq6J3gPIu1H7t\n",
      "track Name   : Lost Without You\n",
      "audio    : \n",
      "\n",
      "track Id    : 6Vc5wAMmXdKIAM7WUoEb7N\n",
      "track Name   : Say Something\n",
      "audio    : https://p.scdn.co/mp3-preview/fe73e55ae08bf3395db3e1ba4485533f59faf3ea?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 2ygvZOXrIeVL4xZmAWJT2C\n",
      "track Name   : my future\n",
      "audio    : \n",
      "\n",
      "track Id    : 5k7VKj1Xwy5DjO4B0PdAOb\n",
      "track Name   : Nude\n",
      "audio    : https://p.scdn.co/mp3-preview/1dc4b14526bd2ba20cf5d3e5d804ef61b767c5f4?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7LVHVU3tWfcxj5aiPFEW4Q\n",
      "track Name   : Fix You\n",
      "audio    : https://p.scdn.co/mp3-preview/46470abd1664c6f34efc0f07e0c2f1129616f28f?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3Oug88Ku2EmAgTrc9fdsKB\n",
      "track Name   : Nightstand\n",
      "audio    : https://p.scdn.co/mp3-preview/4018cb5c38a3488052d7992ed2a2690a8502a7e6?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 0ZAiqymvbQUZAh9y6ZT3Rm\n",
      "track Name   : XO\n",
      "audio    : \n",
      "\n",
      "track Id    : 39KG4kom3enSx4GTThuDGt\n",
      "track Name   : Coaster\n",
      "audio    : https://p.scdn.co/mp3-preview/c6ff06747fb12062087381a3f0d9a795e39602b3?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5sF7hdYvhrcgNq8NZjfK8L\n",
      "track Name   : Not About Angels\n",
      "audio    : https://p.scdn.co/mp3-preview/70de02a1b9bf21e9f34e3f4e0ad243ded4d0a543?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7jqzZyJJLrpkRFYGpkqSK6\n",
      "track Name   : Breathe Me\n",
      "audio    : \n",
      "\n",
      "track Id    : 79DF4VeuuI0Y7NOrimSmR5\n",
      "track Name   : Broken\n",
      "audio    : \n",
      "\n",
      "track Id    : 6qJqLipRQgIJIqPgXwYXYB\n",
      "track Name   : my fault\n",
      "audio    : https://p.scdn.co/mp3-preview/7c96e70081d18e55eb325a9b535bd5b44ca54ff9?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 60iSKGrGazRzICtMjADNSM\n",
      "track Name   : Hold Me While You Wait\n",
      "audio    : \n",
      "\n",
      "track Id    : 6mrKP2jyIQmM0rw6fQryjr\n",
      "track Name   : Let You Down\n",
      "audio    : \n",
      "\n",
      "track Id    : 7xSNmARgtbYjg9KqB4QA8P\n",
      "track Name   : Coaster\n",
      "audio    : https://p.scdn.co/mp3-preview/d954c6c45165e82762d5c79db5ac81d9eca58645?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5uCax9HTNlzGybIStD3vDh\n",
      "track Name   : Say You Won't Let Go\n",
      "audio    : https://p.scdn.co/mp3-preview/00825cb1779b31d68964eda6f2a7911fc2ae96c6?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7CzVAhQeZfTLqNnzdAiqrH\n",
      "track Name   : Let Her Go - Acoustic\n",
      "audio    : https://p.scdn.co/mp3-preview/b61cbcdc8a9a5ba89ea98511c95a150a73c597f5?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6L4F4btXioJPhEwz6T7YYt\n",
      "track Name   : Moonlight\n",
      "audio    : https://p.scdn.co/mp3-preview/47612d33d2a550b522cb4ead556243e263c4cb43?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 0GNI8K3VATWBABQFAzBAYe\n",
      "track Name   : Stay\n",
      "audio    : \n",
      "\n",
      "track Id    : 0vg4WnUWvze6pBOJDTq99k\n",
      "track Name   : You're Beautiful\n",
      "audio    : https://p.scdn.co/mp3-preview/1e9fe4947493daddd30a02f8e7b920eb413ce065?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4wVOKKEHUJxHCFFNUWDn0B\n",
      "track Name   : Chicago Freestyle (feat. Giveon)\n",
      "audio    : \n",
      "\n",
      "track Id    : 285hMzLhJwHVLe9QT9qilk\n",
      "track Name   : Breakeven\n",
      "audio    : https://p.scdn.co/mp3-preview/dd04f29a1c04ba85a2c56d5f1290292240726bf9?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3AJwUDP919kvQ9QcozQPxg\n",
      "track Name   : Yellow\n",
      "audio    : https://p.scdn.co/mp3-preview/26ad91af2f13c2b7729cbc70856ce43f4c790a7b?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 2Ms33RTRCT6gArrpcrPxmo\n",
      "track Name   : Feel\n",
      "audio    : \n",
      "\n",
      "track Id    : 5VFzIzR8nACf9Bad4O73f6\n",
      "track Name   : Hurt\n",
      "audio    : \n",
      "\n",
      "track Id    : 135cNW8kQtiTId7qcsJfVC\n",
      "track Name   : Here Without You\n",
      "audio    : \n",
      "\n",
      "track Id    : 77BNAEJVBOYWy7RGgtsn6c\n",
      "track Name   : blame\n",
      "audio    : https://p.scdn.co/mp3-preview/214e9e5ecff8b36e215e297c068fd906978160b0?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5kcvBnt6DPX3AMEsCx1qDh\n",
      "track Name   : Happiest Year\n",
      "audio    : https://p.scdn.co/mp3-preview/7fb991b746b4002213e5929b81c89502144ea7de?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5JDcQAztvZTIkrWoZihgvC\n",
      "track Name   : A Drop In The Ocean\n",
      "audio    : https://p.scdn.co/mp3-preview/1220a3d2a3aa1e92671d70550cf5cbd9fb8f3b49?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5fVZC9GiM4e8vu99W0Xf6J\n",
      "track Name   : How to Save a Life\n",
      "audio    : https://p.scdn.co/mp3-preview/c808e35b385571cbda7ccf893c9c568b83a0390d?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 77OXCuJjR83b2mnp0HmYMo\n",
      "track Name   : False Art\n",
      "audio    : https://p.scdn.co/mp3-preview/5517bccc64cccfea725950e28fda586eceafb3f7?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 1bSpwPhAxZwlR2enJJsv7U\n",
      "track Name   : No Surprises\n",
      "audio    : https://p.scdn.co/mp3-preview/de1369604de29117d80cfe277054c5d0d11ef732?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 1Q1b8eVkUPGlpSArl8JAVw\n",
      "track Name   : Heart of Gold - 2009 Remaster\n",
      "audio    : https://p.scdn.co/mp3-preview/d3eb6df3de68ff4bea4d048f304e8e14f1fcd642?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3U4isOIWM3VvDubwSI3y7a\n",
      "track Name   : All of Me\n",
      "audio    : https://p.scdn.co/mp3-preview/488c53471e56ff9f629652691444438951e880bb?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 0AqWGyMqgUxpbyzNUaWy9a\n",
      "track Name   : i thought about taking my life last night\n",
      "audio    : https://p.scdn.co/mp3-preview/a5f8fa637373a6605e215cf08b79b07ca1e8694b?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 0JnSoyZMTYZLWFVdVT1JFZ\n",
      "track Name   : you were good to me (bonus track)\n",
      "audio    : \n",
      "\n",
      "track Id    : 6uyTRYRA4KB6QXBaUzU6Ps\n",
      "track Name   : The Encounter\n",
      "audio    : https://p.scdn.co/mp3-preview/0c63d5e90d6fada275151ff04c3aab4262c5787e?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 2VlLbhGLVJgdOW7kKdWWFc\n",
      "track Name   : Six Feet Under\n",
      "audio    : \n",
      "\n",
      "track Id    : 0nZ5Vx48UcSXpY2wLSTP4Z\n",
      "track Name   : Mystery\n",
      "audio    : https://p.scdn.co/mp3-preview/77d6e3f8fc29e2272690e062c413cbd0de311f6f?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4UKCKdYiLN6IMA5ZESUTL7\n",
      "track Name   : the remedy for a broken heart (why am I so in love)\n",
      "audio    : \n",
      "\n",
      "track Id    : 6KhT7CK6FL0BnI3nVPqv4F\n",
      "track Name   : Over 85\n",
      "audio    : https://p.scdn.co/mp3-preview/cc6ad61e0a491d6aed3544d09484098ad4dab358?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 07FkzikE6FuHIa8Ma7zJGc\n",
      "track Name   : Lie\n",
      "audio    : \n",
      "\n",
      "track Id    : 27IZXTdeGYjU6m5lTyDpmr\n",
      "track Name   : The Funeral\n",
      "audio    : \n",
      "\n",
      "track Id    : 1JeMiZSw82XdNMuDjFKHrR\n",
      "track Name   : Loneliness Pt. II\n",
      "audio    : https://p.scdn.co/mp3-preview/d74363668d88cde7f3d98b4e8480b1b710377ded?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6moU77g9RQyMzHNuKEaQKq\n",
      "track Name   : It's You\n",
      "audio    : \n",
      "\n",
      "track Id    : 4L2K7JKseFCBoHMZEAszW0\n",
      "track Name   : Jealous\n",
      "audio    : https://p.scdn.co/mp3-preview/83048fd1f890da78ff019ed28f2e6a34ec083fc1?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3TReqlUK3GUJGYyFbciKJQ\n",
      "track Name   : Anyway\n",
      "audio    : \n",
      "\n",
      "track Id    : 2gMXnyrvIjhVBUZwvLZDMP\n",
      "track Name   : Before You Go\n",
      "audio    : \n",
      "\n",
      "track Id    : 7bdYxWPCs46dQ0XLwySOyv\n",
      "track Name   : better off\n",
      "audio    : \n",
      "\n",
      "track Id    : 1J5bnQju0PQSLQNbZ1Shgd\n",
      "track Name   : The Voyager\n",
      "audio    : https://p.scdn.co/mp3-preview/fba4eb2cd3af022f6e25861833a51f6c43492dc1?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3Tl3DgI4HMQlQ4VqS8kG3H\n",
      "track Name   : Lucid\n",
      "audio    : https://p.scdn.co/mp3-preview/faf7966ba2e65784279d9611b750210301a83ac1?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3i5qVV8azKqGFK4Gzdt5YS\n",
      "track Name   : If You Want Love\n",
      "audio    : \n",
      "\n",
      "track Id    : 75ZvA4QfFiZvzhj2xkaWAh\n",
      "track Name   : I Fall Apart\n",
      "audio    : \n",
      "\n",
      "track Id    : 4RL77hMWUq35NYnPLXBpih\n",
      "track Name   : Skinny Love\n",
      "audio    : https://p.scdn.co/mp3-preview/fa2ee949327d85e7bd22385f00737744ebf87d60?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4KlL5Bwlm4yHYxr0B2rHci\n",
      "track Name   : Heal\n",
      "audio    : https://p.scdn.co/mp3-preview/1db355545b1bfbcfdf0f877c97136c307bf2a3c6?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6lanRgr6wXibZr8KgzXxBl\n",
      "track Name   : A Thousand Years\n",
      "audio    : https://p.scdn.co/mp3-preview/9e1ba149540ddccd2d52766c788b06307536260d?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5zCunX8URvLoBHlg1Fnjv6\n",
      "track Name   : Already Gone\n",
      "audio    : https://p.scdn.co/mp3-preview/4d51708996f71676a66cbf9d1a7059d07f2d26dc?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 1FvHXsDDgShBgDsrLjFsLE\n",
      "track Name   : Serotonin\n",
      "audio    : https://p.scdn.co/mp3-preview/36b0c8a622639a3a9f38a0520ff60b25a25f53f2?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 0VhgEqMTNZwYL1ARDLLNCX\n",
      "track Name   : Can I Be Him\n",
      "audio    : https://p.scdn.co/mp3-preview/b2ff093a841870fe7d42fde3689e54222d581d88?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 7jUBj3nZfs0dRqr68b4yxy\n",
      "track Name   : Smoke & Ash\n",
      "audio    : https://p.scdn.co/mp3-preview/7f159f4eaf0635924e9e233968ebad1bcc8578a8?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6CcJMwBtXByIz4zQLzFkKc\n",
      "track Name   : i love you\n",
      "audio    : \n",
      "\n",
      "track Id    : 1uNiqZnW9OmhumrtYiClYN\n",
      "track Name   : Last Kiss\n",
      "audio    : https://p.scdn.co/mp3-preview/88d6e9f21baf1ac47cedbd3e49616cf6e80bb7d8?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4jnO4ztskhv3YkqgFnewtD\n",
      "track Name   : feelings fade\n",
      "audio    : https://p.scdn.co/mp3-preview/684f7444089464b1ee5b577dbccf9f954cf5710f?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4VuS959DSpr82t3qBqCrWG\n",
      "track Name   : Supermarket Flowers\n",
      "audio    : https://p.scdn.co/mp3-preview/44c5f2f0aba08060bb8f50273931a68e8eea7d34?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 5vjLSffimiIP26QG5WcN2K\n",
      "track Name   : Hold On\n",
      "audio    : \n",
      "\n",
      "track Id    : 6PYRQcbl99SX2udd7zyMGc\n",
      "track Name   : Summer's Gone\n",
      "audio    : https://p.scdn.co/mp3-preview/27d557b0b0eb60e2609050b0b83cb2ed1286afc9?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 4P1L6AniTDJzANaubzWGYs\n",
      "track Name   : I'm Not Enough and I'm Sorry\n",
      "audio    : https://p.scdn.co/mp3-preview/52ee8b40f6ae4b321c5572e981bc0441f0285213?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 2qxmye6gAegTMjLKEBoR3d\n",
      "track Name   : Let Me Down Slowly\n",
      "audio    : https://p.scdn.co/mp3-preview/a784e71dbc6c31f02d4ab06d36b472ecbddbaaf9?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6w8pFOKn42O418qwcQElZ3\n",
      "track Name   : Waves\n",
      "audio    : \n",
      "\n",
      "track Id    : 4WzhjxvLP95y7AMDy0Atwb\n",
      "track Name   : Out Of Love\n",
      "audio    : \n",
      "\n",
      "track Id    : 69vToJ9BMbbLlFZo7k7A7B\n",
      "track Name   : You Are The Reason\n",
      "audio    : \n",
      "\n",
      "track Id    : 55ddytBevcyiSUkTVioEIS\n",
      "track Name   : December\n",
      "audio    : https://p.scdn.co/mp3-preview/713e557dfa26c8bc8a0f6c16f6351ef7a764e138?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 6u4pADuJ055iYJMi38E2I4\n",
      "track Name   : Virgins Club\n",
      "audio    : https://p.scdn.co/mp3-preview/3dfc571d9f085fd07cbc3c76d8c73fe8f2fdc165?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 39KG4kom3enSx4GTThuDGt\n",
      "track Name   : Coaster\n",
      "audio    : https://p.scdn.co/mp3-preview/c6ff06747fb12062087381a3f0d9a795e39602b3?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 27r2uANqwK7XbsiAZnzf9e\n",
      "track Name   : One Day\n",
      "audio    : https://p.scdn.co/mp3-preview/41585dd69086f19f62a0c01e51699a0b5ca72ada?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 2jd7hts2Z6ztyVJJ2nJ6O9\n",
      "track Name   : What I Have\n",
      "audio    : https://p.scdn.co/mp3-preview/dac12ed81a93675e7a36482ffc55ea57f80c8de8?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n",
      "track Id    : 3bne7Qit5AbHkX6kWDItYP\n",
      "track Name   : In My Head\n",
      "audio    : \n",
      "\n",
      "track Id    : 3SR72eMiFDPIxMJc4587yN\n",
      "track Name   : We Should Tell the Truth\n",
      "audio    : https://p.scdn.co/mp3-preview/b9db974b648068505a1f990be1f5aee688e88181?cid=9ba8560ce44540a8a907412d26cedc64\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Get details for given playlist.\n",
    "# Ex: Top 50 playlist - https://open.spotify.com/playlist/37i9dQZEVXbLRQDuF5jeBp\n",
    "\n",
    "import spotipy\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "\n",
    "# 44tRfteJJzAmUONSiA56bQ\n",
    "\n",
    "# 37i9dQZEVXbLRQDuF5jeBp - top 50 playlist\n",
    "\n",
    "spotify = spotipy.Spotify(client_credentials_manager=manager)\n",
    "results = spotify.playlist('44tRfteJJzAmUONSiA56bQ')\n",
    "\n",
    "for item in results['tracks']['items']:\n",
    "    trackId = item['track']['id']\n",
    "    print('track Id    : ' + trackId)\n",
    "    trackName = item['track']['name']\n",
    "    print('track Name   : ' + trackName)\n",
    "    preview_url = item['track']['preview_url']\n",
    "    if preview_url is None:\n",
    "        preview_url = ''\n",
    "    print('audio    : ' + preview_url)\n",
    "    print()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
